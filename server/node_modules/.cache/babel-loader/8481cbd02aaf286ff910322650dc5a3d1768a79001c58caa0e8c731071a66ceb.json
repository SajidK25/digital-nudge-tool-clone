{"ast":null,"code":"var _jsxFileName = \"/Users/vicenteriquelme/Code/MedTool/aitool/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Properties\n  const [showResults, setShowResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n\n  // Helper Functions\n\n  /* A possible answer was clicked */\n  const optionClicked = () => {\n    // Save score\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  /* Resets the game back to default */\n  const restartGame = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setShowResults(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"USA Quiz \\uD83C\\uDDFA\\uD83C\\uDDF8\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), showResults ?\n    /*#__PURE__*/\n    /* 3. Final Results */\n    _jsxDEV(\"div\", {\n      className: \"final-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Thank you for taking the survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => restartGame(),\n        children: \"Restart game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    /* 5. Question Card  */\n    _jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question: \", currentQuestion + 1, \" out of \", questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-text\",\n        children: questions[currentQuestion].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestion].options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => optionClicked(),\n            children: option.text\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5lA+bh+YResdRDZDtE+9l6Royy4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","showResults","setShowResults","currentQuestion","setCurrentQuestion","score","setScore","optionClicked","questions","length","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","options","map","option","id","_c","$RefreshReg$"],"sources":["/Users/vicenteriquelme/Code/MedTool/aitool/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  // Properties\n  const [showResults, setShowResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [score, setScore] = useState(0);\n\n  // Helper Functions\n\n  /* A possible answer was clicked */\n  const optionClicked = () => {\n    // Save score\n    if (currentQuestion + 1 < questions.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  /* Resets the game back to default */\n  const restartGame = () => {\n    setScore(0);\n    setCurrentQuestion(0);\n    setShowResults(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* 1. Header  */}\n      <h1>USA Quiz ðŸ‡ºðŸ‡¸</h1>\n\n      {/* 2. Show results or show the question game  */}\n      {showResults ? (\n\n        /* 3. Final Results */\n        <div className=\"final-results\">\n          <h1>Thank you for taking the survey</h1>\n          <button onClick={() => restartGame()}>Restart game</button>\n        </div>\n      ) : (\n        /* 5. Question Card  */\n        <div className=\"question-card\">\n          {/* Current Question  */}\n          <h2>\n            Question: {currentQuestion + 1} out of {questions.length}\n          </h2>\n          <h3 className=\"question-text\">{questions[currentQuestion].text}</h3>\n\n          {/* List of possible answers  */}\n          <ul>\n            {questions[currentQuestion].options.map((option) => {\n              return (\n                <li\n                  key={option.id}\n                  onClick={() => optionClicked()}\n                >\n                  {option.text}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}