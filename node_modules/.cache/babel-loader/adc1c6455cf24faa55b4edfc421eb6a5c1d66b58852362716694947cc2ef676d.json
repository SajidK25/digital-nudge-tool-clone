{"ast":null,"code":"var _jsxFileName = \"/Users/vicenteriquelme/Code/MedTool/aitool/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport getQuestions from './components/questions.js';\nimport getPrompts from \"./components/medicalTexts\";\nimport getPopup from \"./components/popup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Properties\n  const [showResults, setShowResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showPopups, setShowPopup] = useState(false);\n\n  // const [score, setScore] = useState(0);\n\n  const questions = getQuestions();\n  const prompts = getPrompts();\n  const popup = getPopup();\n\n  // Helper Functions\n\n  const handleClose = () => setShowPopup(false);\n  const handleShow = () => setShowPopup(true);\n\n  /* A possible answer was clicked */\n  const optionClicked = () => {\n    // Save score\n    if (currentQuestion + 1 < prompts.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  /* Resets the game back to default */\n  const restartGame = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    setShowResults(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"AI Medical Bias Tool \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), showResults ?\n    /*#__PURE__*/\n    /* 3. Final Results */\n    _jsxDEV(\"div\", {\n      className: \"final-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Thank you for taking the survey\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => restartGame(),\n        children: \"Restart game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this) : [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"medical-text\",\n      children: prompts[currentQuestion].text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showPopups ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modal\",\n        onClick: () => setIsOpen(true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"hi\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this),\n    /*#__PURE__*/\n    /* 5. Question Card  */\n    _jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Question: \", currentQuestion + 1, \" out of \", prompts.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-text\",\n        children: questions[currentQuestion].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestion].options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => optionClicked(),\n            children: option.text\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"CIeKUnrI+Vil5qggJ3lRNEMAc0w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","getQuestions","getPrompts","getPopup","jsxDEV","_jsxDEV","App","_s","showResults","setShowResults","currentQuestion","setCurrentQuestion","showPopups","setShowPopup","questions","prompts","popup","handleClose","handleShow","optionClicked","length","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","setIsOpen","options","map","option","id","_c","$RefreshReg$"],"sources":["/Users/vicenteriquelme/Code/MedTool/aitool/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport getQuestions from './components/questions.js'\nimport getPrompts from \"./components/medicalTexts\";\nimport getPopup from \"./components/popup\";\n\nfunction App() {\n  // Properties\n  const [showResults, setShowResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showPopups, setShowPopup] = useState(false);\n\n  \n  // const [score, setScore] = useState(0);\n\n  const questions = getQuestions();\n  const prompts = getPrompts();\n  const popup = getPopup();\n\n  // Helper Functions\n\n  const handleClose = () => setShowPopup(false);\n  const handleShow = () => setShowPopup(true);   \n\n  /* A possible answer was clicked */\n  const optionClicked = () => {\n    // Save score\n    if (currentQuestion + 1 < prompts.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  /* Resets the game back to default */\n  const restartGame = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    setShowResults(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* 1. Header  */}\n      <h1>AI Medical Bias Tool </h1>\n\n      {/* 2. Show results or show the question game  */}\n      {showResults ? (\n\n        /* 3. Final Results */\n        <div className=\"final-results\">\n          <h1>Thank you for taking the survey</h1>\n          <button onClick={() => restartGame()}>Restart game</button>\n        </div>\n      ) : (\n        [\n          <h3 className=\"medical-text\">{prompts[currentQuestion].text}</h3>\n          ,\n\n          <div>\n              {showPopups\n                ? <button className=\"modal\" onClick={() => setIsOpen(true)}/>\n                :  <hi />\n              }\n            </div>\n\n          ,\n        /* 5. Question Card  */\n        <div className=\"question-card\">\n          {/* Current Question  */}\n          <h2>\n            Question: {currentQuestion + 1} out of {prompts.length}\n          </h2>\n          <h3 className=\"question-text\">{questions[currentQuestion].text}</h3>\n\n          {/* List of possible answers  */}\n          <ul>\n            {questions[currentQuestion].options.map((option) => {\n              return (\n                <li\n                  key={option.id}\n                  onClick={() => optionClicked()}\n                >\n                  {option.text}\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n        ])}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}