{"ast":null,"code":"var _jsxFileName = \"/Users/carlymiles/Documents/Realize/digital-nudge-tool/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, setState, Component } from \"react\";\n// import { View, FlatList, StyleSheet, Text, Dimensions } from \"react-native\";\n// import * as React from 'react';  \nimport styles from \"./App.css\";\nimport getQuestions from './components/questions.js';\nimport getPrompts from \"./components/medicalTexts\";\n// import getPopup from \"./components/popup\";\n// import alertMode from \"./components/alertMode\";\nimport PopupAlert from \"./components/popupAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Properties\n  const [showResults, setShowResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showPopups, setShowPopup] = useState(false);\n  const [key] = useState(0);\n  const responses = [];\n  const [score, setScore] = useState(0);\n  const questions = getQuestions();\n  const prompts = getPrompts();\n  // const popup = getPopup();\n\n  // Helper Functions\n\n  const handleClose = () => setShowPopup(false);\n  const handleShow = () => setShowPopup(true);\n  let question_id = 0;\n  class AnswerButton extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: []\n      };\n    }\n\n    // addHistory = (key) => {\n    //   this.state.history = [...this.state.history, {id: question_id, key: key}]\n    //   console.log(this.state.history)\n    // }\n\n    /* A possible answer was clicked */\n    optionClicked() {\n      // console.log(\"option clicked\")\n      // this.addHistory(key);\n      console.log(this.props.option.id);\n      console.log({\n        question_id: currentQuestion,\n        answer_key: this.props.option.id\n      });\n      if (currentQuestion + 1 < prompts.length) {\n        setCurrentQuestion(currentQuestion + 1);\n      } else {\n        setShowResults(true);\n      }\n    }\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => this.optionClicked(key),\n        children: this.props.option.text\n      }, this.props.option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  /* Resets the game back to default */\n  const restartGame = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    setShowResults(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \" Medical AI \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), showResults ?\n    /*#__PURE__*/\n    /* 3. Final Results */\n    _jsxDEV(\"div\", {\n      className: \"final-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Thank you for taking the survey!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => restartGame(),\n        children: \"Restart game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gptBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gpt-image\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./Person-outline.png\",\n              alt: \"Person\",\n              style: {\n                minWidth: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"gpt-text\",\n            children: prompts[currentQuestion].prompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(PopupAlert, {\n            showPopupMode: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"medical-text-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gpt-image\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./GPT-logo.jpeg\",\n              alt: \"gpt Logo\",\n              style: {\n                minWidth: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gpt-text\",\n            children: prompts[currentQuestion].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }, this),\n    /*#__PURE__*/\n    // <div>\n    //     {showPopups\n    //       ? popup\n    //       :  <hi />\n    //     }\n    //   </div>,\n    /* 5. Question Card  */\n    _jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: [\"Question: \", currentQuestion + 1, \" out of \", prompts.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-text\",\n        children: questions[currentQuestion].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestion].options.map(option => {\n          return /*#__PURE__*/_jsxDEV(AnswerButton, {\n            option: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this)]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RseFKzK0wpmJ+G0cAYwiWb3aIt4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","setState","Component","styles","getQuestions","getPrompts","PopupAlert","jsxDEV","_jsxDEV","App","_s","showResults","setShowResults","currentQuestion","setCurrentQuestion","showPopups","setShowPopup","key","responses","score","setScore","questions","prompts","handleClose","handleShow","question_id","AnswerButton","constructor","props","state","history","optionClicked","console","log","option","id","answer_key","length","render","onClick","children","text","fileName","_jsxFileName","lineNumber","columnNumber","restartGame","className","gptBox","src","alt","style","minWidth","prompt","showPopupMode","options","map","_c","$RefreshReg$"],"sources":["/Users/carlymiles/Documents/Realize/digital-nudge-tool/src/App.js"],"sourcesContent":["import React, { useState, setState, Component } from \"react\";\n// import { View, FlatList, StyleSheet, Text, Dimensions } from \"react-native\";\n// import * as React from 'react';  \nimport styles from \"./App.css\";\nimport getQuestions from './components/questions.js'\nimport getPrompts from \"./components/medicalTexts\";\n// import getPopup from \"./components/popup\";\n// import alertMode from \"./components/alertMode\";\nimport PopupAlert from \"./components/popupAlert\";\n\n\nfunction App() {\n  // Properties\n  const [showResults, setShowResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showPopups, setShowPopup] = useState(false);\n  const [key] = useState(0);\n  const responses = [];\n  const [score, setScore] = useState(0);\n\n  const questions = getQuestions();\n  const prompts = getPrompts();\n  // const popup = getPopup();\n\n  // Helper Functions\n\n  const handleClose = () => setShowPopup(false);\n  const handleShow = () => setShowPopup(true);\n\n  let question_id = 0\n  class AnswerButton extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        history: [\n          \n        ]\n      }\n    }\n\n    // addHistory = (key) => {\n    //   this.state.history = [...this.state.history, {id: question_id, key: key}]\n    //   console.log(this.state.history)\n    // }\n\n    /* A possible answer was clicked */\n    optionClicked() {\n      // console.log(\"option clicked\")\n      // this.addHistory(key);\n      console.log(this.props.option.id)\n      console.log({question_id: currentQuestion, answer_key: this.props.option.id})\n      if (currentQuestion + 1 < prompts.length) {\n        setCurrentQuestion(currentQuestion + 1);\n\n      } else {\n        setShowResults(true);\n      }\n    };\n\n    render() {\n      \n      return (\n        <li\n          key={this.props.option.id}\n          onClick={() => this.optionClicked(key)}\n        >\n          {this.props.option.text}\n        </li>);\n\n    }\n\n  }\n\n  /* Resets the game back to default */\n  const restartGame = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    setShowResults(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* 1. Header  */}\n      <h1 className='title'> Medical AI </h1>\n\n      {/* 2. Show finished page or show the question game  */}\n      {showResults ? (\n\n        /* 3. Final Results */\n        <div className=\"final-results\">\n          <h1>Thank you for taking the survey!</h1>\n          <button onClick={() => restartGame()}>Restart game</button>\n        </div>\n      ) : (\n        [\n          <div>\n          </div>,\n          <div className='Main'>\n            <div className={styles.gptBox}>\n              <div className=\"prompt-box\">\n                <div className=\"gpt-image\"> <img src='./Person-outline.png' alt=\"Person\" style={{ minWidth: 100 }}></img></div>\n                <h2 className=\"gpt-text\">{prompts[currentQuestion].prompt}</h2>\n                <PopupAlert showPopupMode={true} />\n              </div>\n              <div className=\"medical-text-box\">\n                <div className=\"gpt-image\"> <img src='./GPT-logo.jpeg' alt=\"gpt Logo\" style={{ minWidth: 100 }}></img></div>\n                {/* <alertMode state=\"Mode1\"></alertMode> */}\n                <h3 className=\"gpt-text\">{prompts[currentQuestion].text}</h3>\n              </div>\n            </div>\n          </div>,\n\n          // <div>\n          //     {showPopups\n          //       ? popup\n          //       :  <hi />\n          //     }\n          //   </div>,\n\n          /* 5. Question Card  */\n          <div className=\"question-card\">\n            {/* Current Question  */}\n            <h2 className=\"question-text\">\n              Question: {currentQuestion + 1} out of {prompts.length}\n            </h2>\n            <h3 className=\"question-text\">{questions[currentQuestion].text}</h3>\n\n            {/* List of possible answers  */}\n            <ul>\n              {questions[currentQuestion].options.map((option) => {\n                return (\n                  <AnswerButton option={option} />\n                );\n              })}\n            </ul>\n          </div>\n        ])}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}