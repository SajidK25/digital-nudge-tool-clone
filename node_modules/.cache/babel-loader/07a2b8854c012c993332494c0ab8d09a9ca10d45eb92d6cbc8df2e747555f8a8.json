{"ast":null,"code":"var _jsxFileName = \"/Users/vicenteriquelme/Code/digital-nudge-tool/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, setState, Component } from \"react\";\n// import { View, FlatList, StyleSheet, Text, Dimensions } from \"react-native\";\n// import * as React from 'react';  \nimport styles from \"./App.css\";\nimport getQuestions from './components/questions.js';\nimport getPrompts from \"./components/medicalTexts\";\n// import getPopup from \"./components/popup\";\n// import alertMode from \"./components/alertMode\";\nimport PopupAlert from \"./components/popupAlert\";\nimport { useParams } from \"react-router-dom\";\nimport getDisclaimer from \"./components/disclaimer.js\";\n\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App({\n  chatgpt,\n  popup\n}) {\n  _s();\n  const [UsePopups, setUsePopups] = useState(popup);\n  const [UseChatGPTDisclaimer, setUseChatGPTDisclaimer] = useState(chatgpt);\n\n  // const handleChatGPT = () => setUseChatGPTDisclaimer(true)\n  // const handlePopup = () => setUsePopups(true);\n\n  // const [useFreq, setFreq] = useState(false);\n  // const [freqCounter, setFreqCounter] = useState(0);\n\n  // const handleFreq = () => {\n  //   //Query Model to determine whether to show or not\n  // }\n\n  let {\n    id\n  } = useParams();\n\n  // console.log(id)\n\n  // Properties\n  const [showResults, setShowResults] = useState(false);\n  const [showEndScreen, setShowEndScreen] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showPopups, setShowPopup] = useState(true);\n  const [key] = useState(0);\n  const responses = [];\n  const [score, setScore] = useState(0);\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null);\n  const [acceptedOrNot, setAcceptedOrNot] = useState(false);\n  const questions = getQuestions();\n  const prompts = getPrompts();\n  const post_disclaimer = getDisclaimer();\n\n  // Helper Functions\n  const handleClose = () => setShowPopup(false);\n  const handleShow = () => setShowPopup(true);\n  const disclaimer = \" ChatGPT should not be used to make medical decisions.\";\n  const scrollToTop = () => {\n    console.log(\"scrolled\");\n    window.scrollTo({\n      top: 0\n    });\n    onClickNext();\n  };\n\n  // TODO: Change this func to record string of answer instead of id.\n  const onClickNext = () => {\n    console.log({\n      question_id: currentQuestion,\n      answer_key: selectedAnswerIndex\n    });\n    localStorage.setItem(questions[currentQuestion].code, questions[currentQuestion].options[selectedAnswerIndex].text);\n    window.scrollTo({\n      top: 0\n    });\n\n    // scrollToTop();\n    if (currentQuestion + 1 < prompts.length) {\n      setCurrentQuestion(currentQuestion + 1);\n      handleShow();\n      setSelectedAnswerIndex(null);\n      // console.log(showPopups);\n    } else {\n      setShowResults(true);\n    }\n  };\n  class AnswerButton extends Component {\n    onAnswerSelected() {\n      setSelectedAnswerIndex(this.props.option.id);\n    }\n    render() {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => this.onAnswerSelected(),\n        className: selectedAnswerIndex === this.props.option.id ? 'selected-answer' : null,\n        children: this.props.option.text\n      }, this.props.option.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  /* Resets the game back to default */\n  const restartGame = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    setShowResults(false);\n    setSelectedAnswerIndex(null);\n    handleShow();\n  };\n  const acceptedRestart = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    // setShowResults(false);\n    setSelectedAnswerIndex(null);\n    // handleShow();\n    storeHistory();\n    setShowEndScreen(true);\n    setAcceptedOrNot(true);\n  };\n  const declinedRestart = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    // setShowResults(false);\n    setSelectedAnswerIndex(null);\n    // handleShow();\n    setShowEndScreen(true);\n  };\n  const storeHistory = async () => {\n    const history = {\n      ...localStorage\n    };\n    console.log(history);\n    console.log(\"api call\");\n    const response = await fetch('/api/sql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify([id, history])\n    });\n    console.log(response);\n\n    // const body = await response.text();\n\n    localStorage.clear();\n\n    // Push history to database\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title-box\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \" AI Reading Survey \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), showResults ?\n    /*#__PURE__*/\n    // storeHistory(),\n    /* 3. Final Results */\n    _jsxDEV(\"div\", {\n      className: \"final-results\",\n      children: showEndScreen ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Thank you for taking the survey!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 12\n        }, this), acceptedOrNot ? /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"You have chosen to accept the terms and your response has been recorded.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 30\n        }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"You have chosen to not accept the terms. Your answers have not been recorded.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disclaimer-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"disclaimer-text\",\n          style: {\n            fontWeight: \"bold\"\n          },\n          children: [\"Please don't believe anything we just showed you.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"disclaimer-text\",\n          children: post_disclaimer\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-button accept-button\",\n          onClick: () => acceptedRestart(),\n          children: \"I accept\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-button reject-button\",\n          onClick: () => declinedRestart(),\n          children: \"I don't accept \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }, this) : [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: styles.gptBox,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"scenario-box\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"scenario-text\",\n              children: [\"Scenario \", currentQuestion + 1, \" out of \", prompts.length, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"prompt-box\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-box\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"gpt-text\",\n                children: prompts[currentQuestion].prompt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gpt-image\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                src: require(\"./Person-bubble.jpeg\"),\n                alt: \"Person\",\n                style: {\n                  maxWidth: 60\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 47\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"medical-text-box\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"gpt-image\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: require(\"./GPT-logo.jpeg\"),\n                  alt: \"gpt Logo\",\n                  style: {\n                    maxWidth: 50\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this), UseChatGPTDisclaimer ? /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"gpt-text\",\n                children: [prompts[currentQuestion].text, disclaimer, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 46\n              }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"gpt-text\",\n                children: prompts[currentQuestion].text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 125\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }, this),\n    /*#__PURE__*/\n    /* 5. Question Card  */\n    _jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: [\"Question: \", currentQuestion + 1, \" out of \", prompts.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-text\",\n        children: questions[currentQuestion].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestion].options.map(option => {\n          return /*#__PURE__*/_jsxDEV(AnswerButton, {\n            option: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"next-button\",\n          onClick: onClickNext,\n          disabled: selectedAnswerIndex === null,\n          children: \" Next \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: scrollToTop,\n          children: \"Scroll to top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }, this)], UsePopups ? /*#__PURE__*/_jsxDEV(PopupAlert, {\n      showPopupMode: showPopups,\n      closeModal: handleClose,\n      openModal: handleShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 10\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"c6X+vGklaVekgRTUNi4kPT9jJQI=\", false, function () {\n  return [useParams];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","setState","Component","styles","getQuestions","getPrompts","PopupAlert","useParams","getDisclaimer","jsxDEV","_jsxDEV","App","chatgpt","popup","_s","UsePopups","setUsePopups","UseChatGPTDisclaimer","setUseChatGPTDisclaimer","id","showResults","setShowResults","showEndScreen","setShowEndScreen","currentQuestion","setCurrentQuestion","showPopups","setShowPopup","key","responses","score","setScore","selectedAnswerIndex","setSelectedAnswerIndex","acceptedOrNot","setAcceptedOrNot","questions","prompts","post_disclaimer","handleClose","handleShow","disclaimer","scrollToTop","console","log","window","scrollTo","top","onClickNext","question_id","answer_key","localStorage","setItem","code","options","text","length","AnswerButton","onAnswerSelected","props","option","render","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","restartGame","acceptedRestart","storeHistory","declinedRestart","history","response","fetch","method","headers","body","JSON","stringify","clear","style","fontWeight","gptBox","prompt","src","require","alt","maxWidth","map","disabled","showPopupMode","closeModal","openModal","_c","$RefreshReg$"],"sources":["/Users/vicenteriquelme/Code/digital-nudge-tool/src/App.js"],"sourcesContent":["import React, { useState, setState, Component } from \"react\";\n// import { View, FlatList, StyleSheet, Text, Dimensions } from \"react-native\";\n// import * as React from 'react';  \nimport styles from \"./App.css\";\nimport getQuestions from './components/questions.js'\nimport getPrompts from \"./components/medicalTexts\";\n// import getPopup from \"./components/popup\";\n// import alertMode from \"./components/alertMode\";\nimport PopupAlert from \"./components/popupAlert\";\nimport { useParams } from \"react-router-dom\"\nimport getDisclaimer from \"./components/disclaimer.js\";\n\n// import { BrowserRouter as Router } from 'react-router-dom';\n\n\nfunction App({ chatgpt, popup }) {\n\n\n  const [UsePopups, setUsePopups] = useState(popup);\n  const [UseChatGPTDisclaimer, setUseChatGPTDisclaimer] = useState(chatgpt);\n\n  // const handleChatGPT = () => setUseChatGPTDisclaimer(true)\n  // const handlePopup = () => setUsePopups(true);\n\n  // const [useFreq, setFreq] = useState(false);\n  // const [freqCounter, setFreqCounter] = useState(0);\n\n\n  // const handleFreq = () => {\n  //   //Query Model to determine whether to show or not\n  // }\n\n\n  let { id } = useParams()\n\n  // console.log(id)\n\n\n  // Properties\n  const [showResults, setShowResults] = useState(false);\n  const [showEndScreen, setShowEndScreen] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showPopups, setShowPopup] = useState(true);\n  const [key] = useState(0);\n  const responses = [];\n  const [score, setScore] = useState(0);\n  const [selectedAnswerIndex, setSelectedAnswerIndex] = useState(null)\n  const [acceptedOrNot, setAcceptedOrNot] = useState(false)\n\n  const questions = getQuestions();\n  const prompts = getPrompts();\n\n  const post_disclaimer = getDisclaimer();\n\n  // Helper Functions\n  const handleClose = () => setShowPopup(false);\n  const handleShow = () => setShowPopup(true);\n  \n\n  const disclaimer = \" ChatGPT should not be used to make medical decisions.\"\n\n\n  const scrollToTop = () => {\n    console.log(\"scrolled\")\n    window.scrollTo({ top: 0});\n    onClickNext()\n  };\n\n  // TODO: Change this func to record string of answer instead of id.\n  const onClickNext = () => {\n    console.log({ question_id: currentQuestion, answer_key: selectedAnswerIndex });\n    localStorage.setItem(questions[currentQuestion].code, questions[currentQuestion].options[selectedAnswerIndex].text);\n    window.scrollTo({ top: 0});\n\n    // scrollToTop();\n    if (currentQuestion + 1 < prompts.length) {\n      setCurrentQuestion(currentQuestion + 1);\n      handleShow();\n      setSelectedAnswerIndex(null);\n      // console.log(showPopups);\n    } else {\n      setShowResults(true);\n    }\n  }\n\n  class AnswerButton extends Component {\n    onAnswerSelected() {\n      setSelectedAnswerIndex(this.props.option.id)\n    }\n\n    render() {\n\n      return (\n        <li\n          key={this.props.option.id}\n          onClick={() => this.onAnswerSelected()}\n          className={selectedAnswerIndex === this.props.option.id ? 'selected-answer' : null}\n        >\n          {this.props.option.text}\n        </li>);\n\n    }\n  }\n\n  /* Resets the game back to default */\n  const restartGame = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    setShowResults(false);\n    setSelectedAnswerIndex(null)\n    handleShow();\n  };\n\n  const acceptedRestart = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    // setShowResults(false);\n    setSelectedAnswerIndex(null)\n    // handleShow();\n    storeHistory();\n    setShowEndScreen(true)\n    setAcceptedOrNot(true)\n  };\n\n  const declinedRestart = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    // setShowResults(false);\n    setSelectedAnswerIndex(null);\n    // handleShow();\n    setShowEndScreen(true)\n  };\n\n  \n\n\n\n  const storeHistory = async () => {\n    const history = {...localStorage};\n    console.log(history);\n\n    console.log(\"api call\")\n\n    const response = await fetch('/api/sql', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify([id,history])\n    });\n\n    console.log(response)\n\n    // const body = await response.text();\n\n    localStorage.clear();\n\n    // Push history to database\n\n  }\n  return (\n    <div className=\"App\">\n      {/* 1. Header  */}\n      <div className=\"title-box\">\n        <h1 className='title'> AI Reading Survey </h1>\n      </div>\n\n\n      {/* 2. Show finished page or show the question game  */}\n\n\n\n\n      {showResults ? (\n        // storeHistory(),\n        /* 3. Final Results */\n        <div className=\"final-results\">\n          {showEndScreen ? (\n            <div> \n           <h1>Thank you for taking the survey!</h1>\n           {acceptedOrNot ? (<h1>You have chosen to accept the terms and your response has been recorded.</h1>\n):(<h1>You have chosen to not accept the terms. Your answers have not been recorded.</h1>)}\n            </div>\n          ):(\n            <div className=\"disclaimer-box\">\n            <h2 className=\"disclaimer-text\" style={{fontWeight: \"bold\"}}>\n            Please don't believe anything we just showed you. \n            <br/><br/>\n            </h2>\n            <h3 className=\"disclaimer-text\">\n            {post_disclaimer}\n            </h3>\n        <button className=\"restart-button accept-button\" onClick={() => acceptedRestart()}>I accept</button>\n        <button className=\"restart-button reject-button\" onClick={() => declinedRestart()}>I don't accept </button>\n        </div>\n          )}\n\n        </div>\n      ) : (\n        [\n          <div className=\"Main\">\n            <div className=\"main-box\">\n              <div className={styles.gptBox}>\n                <div className=\"scenario-box\">\n                  <h2 className=\"scenario-text\">Scenario {currentQuestion + 1} out of {prompts.length}:</h2>\n                </div>\n                <div className=\"prompt-box\">\n                  <div className=\"text-box\">\n                    <h2 className=\"gpt-text\">{prompts[currentQuestion].prompt}</h2>\n                  </div>\n                  <div className=\"gpt-image\"> <img src={require(\"./Person-bubble.jpeg\")} alt=\"Person\" style={{ maxWidth: 60 }}></img></div>\n                </div>\n                <div className=\"answer-box\">\n                  <div className=\"medical-text-box\">\n                    <div className=\"gpt-image\"> <img src={require(\"./GPT-logo.jpeg\")} alt=\"gpt Logo\" style={{ maxWidth: 50 }}></img></div>\n                    {UseChatGPTDisclaimer ? (<h3 className=\"gpt-text\">{prompts[currentQuestion].text}{disclaimer} </h3>) : (<h3 className=\"gpt-text\">{prompts[currentQuestion].text}</h3>)}\n\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>,\n\n          /* 5. Question Card  */\n          <div className=\"question-card\">\n            {/* Current Question  */}\n            <h2 className=\"question-text\">\n              Question: {currentQuestion + 1} out of {prompts.length}\n            </h2>\n            <h3 className=\"question-text\">{questions[currentQuestion].text}</h3>\n\n            {/* List of possible answers  */}\n            <ul>\n              {questions[currentQuestion].options.map((option) => {\n                return (\n                  <AnswerButton option={option} />\n                );\n              })}\n            </ul>\n            <div className=\"button-box\">\n              <button className=\"next-button\" onClick={onClickNext} disabled={selectedAnswerIndex === null}> Next </button>\n              <button onClick={scrollToTop}>Scroll to top</button>\n            </div>\n          </div>\n        ])}\n\n      {UsePopups ?\n        (<PopupAlert showPopupMode={showPopups} closeModal={handleClose} openModal={handleShow} />\n        ) : (null)}\n\n    </div>\n\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}