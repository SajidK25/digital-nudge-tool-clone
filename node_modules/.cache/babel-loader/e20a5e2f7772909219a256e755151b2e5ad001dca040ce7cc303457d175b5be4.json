{"ast":null,"code":"var _jsxFileName = \"/Users/carlymiles/Documents/Realize/digital-nudge-tool/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n// import { View, FlatList, StyleSheet, Text, Dimensions } from \"react-native\";\n// import * as React from 'react';  \nimport styles from \"./App.css\";\nimport getQuestions from './components/questions.js';\nimport getPrompts from \"./components/medicalTexts\";\n// import getPopup from \"./components/popup\";\n// import alertMode from \"./components/alertMode\";\nimport PopupAlert from \"./components/popupAlert\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Properties\n  const [showResults, setShowResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  // const [showPopups, setShowPopup] = useState(false);\n\n  const [score, setScore] = useState(0);\n  const questions = getQuestions();\n  const prompts = getPrompts();\n  // const popup = getPopup();\n\n  // Helper Functions\n\n  // const handleClose = () => setShowPopup(false);\n  // const handleShow = () => setShowPopup(true);   \n\n  /* A possible answer was clicked */\n  const optionClicked = () => {\n    // Save score\n\n    if (currentQuestion + 1 < prompts.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  /* Resets the game back to default */\n  const restartGame = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    setShowResults(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \" Medical AI \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), showResults ?\n    /*#__PURE__*/\n    /* 3. Final Results */\n    _jsxDEV(\"div\", {\n      className: \"final-results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Thank you for taking the survey!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => restartGame(),\n        children: \"Restart game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Main\",\n      children: [\"this.handleShow();\", /*#__PURE__*/_jsxDEV(PopupAlert, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gptBox,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prompt-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gpt-image\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./Person-outline.png\",\n              alt: \"Person\",\n              style: {\n                minWidth: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"gpt-text\",\n            children: prompts[currentQuestion].prompt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"medical-text-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gpt-image\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"./GPT-logo.jpeg\",\n              alt: \"gpt Logo\",\n              style: {\n                minWidth: 100\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gpt-text\",\n            children: prompts[currentQuestion].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this),\n    /*#__PURE__*/\n    // <div>\n    //     {showPopups\n    //       ? popup\n    //       :  <hi />\n    //     }\n    //   </div>,\n    /* 5. Question Card  */\n    _jsxDEV(\"div\", {\n      className: \"question-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"question-text\",\n        children: [\"Question: \", currentQuestion + 1, \" out of \", prompts.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-text\",\n        children: questions[currentQuestion].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: questions[currentQuestion].options.map(option => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            onClick: () => optionClicked(),\n            children: option.text\n          }, option.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this)]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5lA+bh+YResdRDZDtE+9l6Royy4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","styles","getQuestions","getPrompts","PopupAlert","jsxDEV","_jsxDEV","App","_s","showResults","setShowResults","currentQuestion","setCurrentQuestion","score","setScore","questions","prompts","optionClicked","length","restartGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","gptBox","src","alt","style","minWidth","prompt","text","options","map","option","id","_c","$RefreshReg$"],"sources":["/Users/carlymiles/Documents/Realize/digital-nudge-tool/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n// import { View, FlatList, StyleSheet, Text, Dimensions } from \"react-native\";\n// import * as React from 'react';  \nimport styles from \"./App.css\";\nimport getQuestions from './components/questions.js'\nimport getPrompts from \"./components/medicalTexts\";\n// import getPopup from \"./components/popup\";\n// import alertMode from \"./components/alertMode\";\nimport PopupAlert from \"./components/popupAlert\";\n\n\nfunction App() {\n  // Properties\n  const [showResults, setShowResults] = useState(false);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  // const [showPopups, setShowPopup] = useState(false);\n\n\n  const [score, setScore] = useState(0);\n\n  const questions = getQuestions();\n  const prompts = getPrompts();\n  // const popup = getPopup();\n\n  // Helper Functions\n\n  // const handleClose = () => setShowPopup(false);\n  // const handleShow = () => setShowPopup(true);   \n\n  /* A possible answer was clicked */\n  const optionClicked = () => {\n    // Save score\n    \n    if (currentQuestion + 1 < prompts.length) {\n      setCurrentQuestion(currentQuestion + 1);\n    } else {\n      setShowResults(true);\n    }\n  };\n\n  /* Resets the game back to default */\n  const restartGame = () => {\n    // setScore(0);\n    setCurrentQuestion(0);\n    setShowResults(false);\n  };\n\n  return (\n    <div className=\"App\">\n      {/* 1. Header  */}\n      <h1 className='title'> Medical AI </h1>\n\n      {/* 2. Show finished page or show the question game  */}\n      {showResults ? (\n\n        /* 3. Final Results */\n        <div className=\"final-results\">\n          <h1>Thank you for taking the survey!</h1>\n          <button onClick={() => restartGame()}>Restart game</button>\n        </div>\n      ) : (\n        [\n          <div className='Main'>\n            this.handleShow();\n            <PopupAlert />\n            <div className={styles.gptBox}>\n              <div className=\"prompt-box\">\n                <div className=\"gpt-image\"> <img src='./Person-outline.png' alt=\"Person\" style={{ minWidth: 100 }}></img></div>\n                <h2 className=\"gpt-text\">{prompts[currentQuestion].prompt}</h2>\n              </div>\n              <div className=\"medical-text-box\">\n                <div className=\"gpt-image\"> <img src='./GPT-logo.jpeg' alt=\"gpt Logo\" style={{ minWidth: 100 }}></img></div>\n                {/* <alertMode state=\"Mode1\"></alertMode> */}\n                <h3 className=\"gpt-text\">{prompts[currentQuestion].text}</h3>\n              </div>\n            </div>\n          </div>,\n\n          // <div>\n          //     {showPopups\n          //       ? popup\n          //       :  <hi />\n          //     }\n          //   </div>,\n\n          /* 5. Question Card  */\n          <div className=\"question-card\">\n            {/* Current Question  */}\n            <h2 className=\"question-text\">\n              Question: {currentQuestion + 1} out of {prompts.length}\n            </h2>\n            <h3 className=\"question-text\">{questions[currentQuestion].text}</h3>\n\n            {/* List of possible answers  */}\n            <ul>\n              {questions[currentQuestion].options.map((option) => {\n                return (\n                  <li\n                    key={option.id}\n                    onClick={() => optionClicked()}\n                  >\n                    {option.text}\n                  </li>\n                );\n              })}\n            </ul>\n          </div>\n        ])}\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}